* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
:root {
  --green: #1bfd9c;
}
ul {
  list-style-type: none;
}
body {
  position: relative;
  background: linear-gradient(135deg, #1f1c2c, #928dab);
}
section {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 15px;
  padding-bottom: 20px;
}
header {
  padding: 5px 10px;
}
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}
.info_game {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  color: #ecf0f1; /* Світлий текст */
  font-size: 1rem; /* Зменшений розмір шрифту */
  font-weight: bold;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); /* Легка тінь для тексту */
}
#pause_game {
  cursor: pointer;
}
.info_game p {
  padding: 5px 10px; /* Менші відступи для елементів */
  border-radius: 5px;
  background: rgba(0, 0, 0, 0.4);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Тінь для елементів */
  transition: transform 0.2s, background 0.2s;
}

.info_game p:hover {
  background: linear-gradient(
    135deg,
    #16a085,
    #1abc9c
  ); /* Зміна фону при наведенні */
}

.tetris {
  border: 4px solid #333;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4),
    /* Зовнішня тінь */ inset 0 0 10px rgba(255, 255, 255, 0.2); /* Внутрішня світла тінь */
  display: grid;
  grid-template-columns: repeat(10, auto);
}

.tetris li {
  height: min(4vh, 7vw);
  width: min(4vh, 7vw);
  background: rgba(0, 0, 0, 0.4);
  border: 2px solid #0d3c55;
  box-shadow: inset 0 2px 3px rgba(0, 0, 0, 0.4),
    /* Внутрішня тінь зверху */ inset 0 -2px 2px rgba(0, 0, 0, 0.3),
    /* Внутрішня тінь знизу */ 2px 0 3px rgba(0, 0, 0, 0.2),
    /* Внутрішня тінь справа */-2px -2px 2px rgba(0, 0, 0, 0.2); /* Внутрішня тінь  зліва */
}
.tetris .O {
  background: red;
}

.tetris .L {
  background: rgb(16 255 16);
}

.tetris .J {
  background: rgb(255 4 255);
}

.tetris .T {
  background: #0275f8;
}

.tetris .I {
  background: yellow;
}

.tetris .S {
  background: aqua;
}

.tetris .Z {
  background: rgb(255, 136, 0);
}
.tetris .B {
  background: #8a2be2;
}
button {
  --button_radius: 0.75em;
  --button_color: #e8e8e8;
  --button_outline_color: #000000;
  font-size: 17px;
  font-weight: bold;
  border: none;
  border-radius: var(--button_radius);
  background: var(--button_outline_color);
  padding: 0;
  margin: 0;
}
.pause_active {
  cursor: pointer;
}
.button_arrow {
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid var(--button_outline_color);
  border-radius: var(--button_radius);
  width: 100%;
  height: 100%;
  background: var(--button_color);
  color: var(--button_outline_color);
  transition: transform 0.1s ease;
}
/* 
button:hover .button_arrow {
  transform: translateY(-0.33em);
}

button:active .button_arrow {
  transform: translateY(0);
} */

.overlay {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.pause_overlay {
  background: rgba(62, 0, 139, 0.5);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: none;
  align-items: center;
  justify-content: center;
}
.start_game_overlay {
  background: transparent;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.start_game {
  font-size: 15px;
  padding: 0.7em 2.7em;
  letter-spacing: 0.06em;
  cursor: pointer;
  position: relative;
  font-family: inherit;
  border-radius: 0.6em;
  overflow: hidden;
  transition: all 0.3s;
  line-height: 1.4em;
  border: 2px solid var(--green);
  background: linear-gradient(
    to right,
    rgba(27, 253, 156, 0.1) 1%,
    transparent 40%,
    transparent 60%,
    rgba(27, 253, 156, 0.1) 100%
  );
  color: var(--green);
  box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.4),
    0 0 9px 3px rgba(27, 253, 156, 0.1);
}

.start_game:hover {
  color: #82ffc9;
  box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.6),
    0 0 9px 3px rgba(27, 253, 156, 0.2);
}

.start_game:before {
  content: '';
  position: absolute;
  left: -4em;
  width: 4em;
  height: 100%;
  top: 0;
  transition: transform 0.4s ease-in-out;
  background: linear-gradient(
    to right,
    transparent 1%,
    rgba(27, 253, 156, 0.1) 40%,
    rgba(27, 253, 156, 0.1) 60%,
    transparent 100%
  );
}

.start_game:hover:before {
  transform: translateX(15em);
}

.pause_active {
  color: #fff;
  font-size: 3rem; /* Великий шрифт для повідомлення */
  font-weight: bold;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.5); /* Тінь для тексту */
  padding: 15px;
  border-radius: 10px;
  background: linear-gradient(
    135deg,
    #6e8efb,
    #a777e3
  ); /* Градієнтний фон для тексту */
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5); /* Тінь для блоку */
  animation: pulse 1.5s infinite; /* Анімація для тексту */
}

.game-over-container {
  display: flex;
  text-align: center;
  gap: 10px;
  color: white;
  position: absolute;
  top: 50%;
  right: 3%;
  transform: translate(-50%, -50%);
}

@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Медіа-запит для мобільних та планшетів */

@media screen and (min-width: 350px) {
  section {
    padding-left: 0;
    align-items: center;
  }
  .btn_mobile {
    padding-left: 0;
  }
}
@media screen and (min-width: 500px) {
  .game-over-container {
    right: 10%;
  }
}

@media screen and (min-width: 800px) {
  .game-over-container {
    display: block;
    right: 15%;
  }
  .breakable {
    display: inline;
  }
}
@media screen and (max-width: 1024px) {
  .btn_mobile {
    display: grid;
    grid-template-columns: repeat(3, minmax(30px, 50px));
    grid-template-areas:
      '. up .'
      'left down right';
    align-items: center;
    gap: 5px;
    justify-content: center;
    padding-bottom: 30px;
  }
  .arrow {
    width: 50px;
    height: 50px;
  }
  .arrow.up {
    grid-area: up;
  }

  .arrow.down {
    grid-area: down;
  }

  .arrow.left {
    grid-area: left;
  }

  .arrow.right {
    grid-area: right;
  }
}
.result_end_info {
  background: #1e1e1e;
  color: #f1f1f1;
  border-radius: 10px;
  padding: 20px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  position: relative;
  overflow: hidden;
}

.result_end_info::before,
.result_end_info::after {
  content: '';
  position: absolute;
  border-radius: 10px;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    45deg,
    transparent,
    rgba(255, 0, 0, 0.2),
    transparent
  );
  z-index: 1;
  pointer-events: none;
  animation: animateBorder 5s linear infinite;
}

.result_end_info::after {
  background: linear-gradient(
    -45deg,
    transparent,
    rgba(0, 0, 255, 0.2),
    transparent
  );
}

@keyframes animateBorder {
  0% {
    transform: translateX(-100%) translateY(-100%);
  }
  100% {
    transform: translateX(100%) translateY(100%);
  }
}

.result_end_info h2 {
  margin: 0;
  padding-bottom: 10px;
  border-bottom: 2px solid #f1f1f1;
  z-index: 2;
  position: relative;
}

.result_end_info p {
  margin: 10px 0;
  z-index: 2;
  position: relative;
}

.result_restart_game {
  cursor: pointer;
  font-size: 15px;
  padding: 0.7em 2.7em;
  letter-spacing: 0.06em;
  position: relative;
  font-family: inherit;
  border-radius: 0.6em;
  overflow: hidden;
  transition: all 0.3s;
  line-height: 1.4em;
  border: 2px solid var(--green);
  background: linear-gradient(
    to right,
    rgba(27, 253, 156, 0.1) 1%,
    transparent 40%,
    transparent 60%,
    rgba(27, 253, 156, 0.1) 100%
  );
  color: var(--green);
  box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.4),
    0 0 9px 3px rgba(27, 253, 156, 0.1);
}

.result_restart_game:hover {
  color: #82ffc9;
  box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.6),
    0 0 9px 3px rgba(27, 253, 156, 0.2);
}

.result_restart_game:before {
  content: '';
  position: absolute;
  left: -4em;
  width: 4em;
  height: 100%;
  top: 0;
  transition: transform 0.4s ease-in-out;
  background: linear-gradient(
    to right,
    transparent 1%,
    rgba(27, 253, 156, 0.1) 40%,
    rgba(27, 253, 156, 0.1) 60%,
    transparent 100%
  );
}
/.result_restart_game:hover:before {
  transform: translateX(15em);
}

/* Медіа-запит для великих екранів */
@media screen and (min-width: 1025px) {
  .btn_mobile {
    display: none;
  }
  body {
    min-height: 100vh;
  }
  header {
    padding: 16px;
  }
}

@media screen and (min-width: 1024px) {
  .tetris_block:hover {
    animation: borderColorChange 5s infinite;
  }
}
